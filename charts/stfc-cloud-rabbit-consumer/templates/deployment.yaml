apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: rabbit-consumer
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: rabbit-consumer
  template:
    metadata:
      annotations:
        # Force pod restart on configmap change
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: consumer-ral-info
      labels:
        app: rabbit-consumer
    spec:
      containers:
        - name: kerberos
          image: "{{ .Values.kerberosSidecar.image.repository }}:{{ .Values.kerberosSidecar.image.tag }}"
          command: ["/bin/sh", "-c", "/etc/entrypoints.d/sidecar-entrypoint.sh"]
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-kerberos-env
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "while [ ! -f /shared/krb5cc ]; do sleep 1; done"]

          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - klist -s
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3

          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - klist -s
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3

          volumeMounts:
            - name: entrypoints
              mountPath: /etc/entrypoints.d
            - name: shared
              mountPath: /shared
            # Kerberos related
            - name: kerberos-conf-files
              mountPath: /etc/krb5.conf
              subPath: krb5.conf
            - name: kerberos-keytab
              mountPath: /etc/krb5.keytab
              subPath: krb5.keytab
              readOnly: true
        
        {{- range $i := .Values.consumer.queues }}
        - name: consumer-{{ $i  | replace "." "-" }}
          image: "{{ $.Values.consumer.image.repository }}:{{ default $.Chart.AppVersion $.Values.consumer.image.tag }}"
          imagePullPolicy: {{ $.Values.consumer.image.pullPolicy }}
          env:
          - name: "CONSUMER_QUEUE"
            value: {{ $i }}
          envFrom:
            - configMapRef:
                name: {{ $.Release.Name }}-consumer-env
            - configMapRef:
                name: {{ $.Release.Name }}-kerberos-env
            - secretRef:
                name: {{ $.Values.consumer.rabbitmq.secretRef }}
            - secretRef:
                name: {{ $.Values.consumer.openstack.secretRef }}

          volumeMounts:
            - name: shared
              mountPath: /shared
            - name: kerberos-conf-files
              mountPath: /etc/krb5.conf
              subPath: krb5.conf
            - name: trusted-certs
              mountPath: /etc/grid-security/certificates
        {{- end }}

      hostAliases:
      # Logon 04
      - ip: "130.246.132.94"
        hostnames:
          - "fed.cclrc.ac.uk"

      volumes:
        - name: entrypoints
          configMap:
            name: {{ .Release.Name }}-entrypoints
            defaultMode: 0755
        - name: kerberos-conf-files
          configMap:
            name: {{ .Release.Name }}-kerberos-files
        - name: trusted-certs
          configMap:
            name: {{ .Release.Name }}-trusted-certs
        - name: kerberos-keytab
          secret:
            secretName: {{ .Values.kerberosSidecar.keytabSecretRef }}
            optional: false

        - name: shared
          emptyDir: {}
