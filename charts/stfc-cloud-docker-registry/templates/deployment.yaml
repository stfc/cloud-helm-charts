apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "docker-registry.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    app: {{ template "docker-registry.name" . }}

spec:
  selector:
    matchLabels:
      app: {{ template "docker-registry.name" . }}
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ template "docker-registry.name" . }}
      # update if either configmap or secret is updated
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
            {{- if .Values.metrics.enabled }}
            - containerPort: 5001
              name: http-metrics
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          env: {{ include "docker-registry.envs" . | nindent 12 }}
          volumeMounts: {{ include "docker-registry.volumeMounts" . | nindent 12 }} 
      volumes: {{ include "docker-registry.volumes" . | nindent 8 }}